<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - AgentWebApp</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style type="text/css">
        :root {
            --bs-primary: #4666e7;
            --bs-secondary: #8d96a5;
            --sidebar-width: 250px;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f3f9;
            overflow-x: hidden;
        }

        /* Sidebar Styles */
        .sidebar {
            position: fixed;
            left: 0;
            top: 0;
            height: 100%;
            width: var(--sidebar-width);
            background: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
            z-index: 1000;
            transition: all 0.3s ease;
        }

        .sidebar-header {
            padding: 1.5rem 1rem;
            border-bottom: 1px solid #f0f0f0;
        }

        .sidebar-brand {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--bs-primary);
            text-decoration: none;
        }

        .nav-item {
            margin: 0.25rem 0;
        }

        .nav-link {
            color: #555;
            padding: 0.75rem 1rem;
            display: flex;
            align-items: center;
            transition: all 0.3s ease;
        }

            .nav-link i {
                margin-right: 0.5rem;
                font-size: 1.25rem;
            }

            .nav-link:hover, .nav-link.active {
                color: var(--bs-primary);
                background: rgba(70, 102, 231, 0.1);
            }

        /* Main Content Styles */
        .main-content {
            margin-left: var(--sidebar-width);
            padding: 2rem;
            min-height: 100vh;
        }

        /* Header Styles */
        .top-header {
            background: #fff;
            padding: 1rem 2rem;
            margin: -2rem -2rem 2rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
        }

        /* Card Styles */
        .card {
            border: none;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
            border-radius: 0.5rem;
        }

        .card-header {
            background-color: #fff;
            border-bottom: 1px solid #f0f0f0;
            padding: 1rem 1.5rem;
        }

        /* Button Styles */
        .btn {
            padding: 0.5rem 1rem;
            border-radius: 0.35rem;
        }

        .btn-primary {
            background-color: var(--bs-primary);
            border-color: var(--bs-primary);
        }

        /* Table Styles */
        .table {
            margin-bottom: 0;
        }

            .table th {
                border-top: none;
                background-color: #f8f9fa;
                font-weight: 600;
            }

        /* Responsive */

    </style>
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    @* Deprecated: Use Views/Shared/_Layout.cshtml for all layouts. This file is intentionally left blank. *@
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <a class="sidebar-brand" href="/">AgentWebApp</a>
        </div>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Page"]?.ToString() == "/Index" ? "active" : "")"
                   href="/">
                    <i class="ri-dashboard-line"></i> Dashboard
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Page"]?.ToString()?.Contains("/Products") == true ? "active" : "")"
                   href="/Products">
                    <i class="ri-shopping-bag-line"></i> Products
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <i class="ri-user-line"></i> Users
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <i class="ri-settings-line"></i> Settings
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Page"]?.ToString()?.Contains("/Logs") == true ? "active" : "")"
                   href="/Logs">
                    <i class="ri-file-list-2-line"></i> Logs
                </a>
            </li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="top-header d-flex justify-content-between align-items-center">
            <button class="btn btn-link d-lg-none" id="sidebarToggle">
                <i class="ri-menu-line"></i>
            </button>
            <div class="d-flex align-items-center">
                <partial name="_LoginPartial" />
                <div class="top-header">
                </div>
            </div>

            <div class="container-fluid px-0">
                @RenderBody()
            </div>
        </div>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        // Toggle sidebar on mobile
        document.getElementById('sidebarToggle')?.addEventListener('click', function() {
            document.querySelector('.sidebar').classList.toggle('show');
        });

        // Close sidebar when clicking outside on mobile
        document.addEventListener('click', function(event) {
            const sidebar = document.querySelector('.sidebar');
            const sidebarToggle = document.getElementById('sidebarToggle');

            if (window.innerWidth < 992 &&
                !sidebar.contains(event.target) &&
                !sidebarToggle.contains(event.target) &&
                sidebar.classList.contains('show')) {
                sidebar.classList.remove('show');
            }
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>