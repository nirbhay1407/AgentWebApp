@using IocContainer.Models
@model IEnumerable<SubCategoryModel>

@{
    ViewData["Title"] = "Index";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Home/ <a asp-action="Create">Sub Category list</a></h4>
    <p>
        <a asp-action="Create">Create New</a>
        <a asp-action="Download">Download</a>
    </p>
    <div class="card">
        <h5 class="card-header">List of Categories</h5>
        <div class="alert alert-primary alert-dismissible" role="alert">
            This is a primary dismissible alert — check it out!
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        <div class="table-responsive text-nowrap">
            <table class="table" id="dataTable">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th>
                            @Html.DisplayName("Category Name")
                        </th>
                        <th>
                            @Html.DisplayName("Category Description")
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AddedDate)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model!)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Category!.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Category!.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AddedDate)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Create", new { id=item.ID }) |
                                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $('#dataTable').dataTable({
    });

    });


        function handleDelete(id) {

               bootbox.confirm({
                                    title: 'Destroy planet?',
                                    message: 'Do you want to activate the Deathstar now? This cannot be undone.',
                                    buttons: {
                                    cancel: {
                                    label: '<i class="fa fa-times"></i> Cancel'
                                    },
                                    confirm: {
                                    label: '<i class="fa fa-check"></i> Confirm'
                                    }
                                    },
                                    callback: function (result) {
                                    console.log('This was logged in the callback: ' + id);
                                     $.ajax({
                                            type: "Delete",
                                            url: "Category/Delete?id="+id,
                                            success: function (response) {
                                                if(response.status==200){
                                                    ToDesign('Sucess', 'Done');
                                                    location.reload();
                                                }


                                            },
                                            //failure: function (response) {
                                            //    bootbox.alert(response.responseText);
                                            //},
                                            error: function (response) {
                                                bootbox.alert(response.responseText);
                                            }
                                        });
                                    }
                                    });
                                    }


</script>