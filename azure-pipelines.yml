trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- checkout: self

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
    
- script: dotnet --info
  displayName: 'Display SDK Info'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'


- script: dotnet restore WebAPI/WebAPI.csproj
  displayName: 'Restore dependencies'

- script: dotnet build WebAPI/WebAPI.csproj --configuration $(buildConfiguration) --no-restore
  displayName: 'Build'

- script: dotnet test WebAPI/WebAPI.csproj --no-build --verbosity normal
  displayName: 'Test'

- script: dotnet publish WebAPI/WebAPI.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish
  displayName: 'Publish'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'

# - task: AzureWebApp@1
#   inputs:
#     azureSubscription: 'FirstServiceConnection'
#     appType: 'webApp'
#     appName: 'AgentApp'
#     package: '$(Build.ArtifactStagingDirectory)/IocContainer.zip'

# 1. Publish the project
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'

# 2. Archive the published output as a ZIP
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/publish'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/publish/WebAPI.zip'
    replaceExistingArchive: true

# 3. Publish the ZIP as an artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/publish/WebAPI.zip'
    artifactName: 'drop'

# 3.5. Download the artifact for deployment
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'drop'
    downloadPath: '$(Pipeline.Workspace)'

# 4. Deploy to Azure Web App
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'FirstServiceConnection'
    appType: 'webApp'
    appName: 'AgentApp'
    package: '$(Pipeline.Workspace)/drop/WebAPI.zip'
